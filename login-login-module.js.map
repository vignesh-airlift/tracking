{"version":3,"sources":["./node_modules/ng-otp-input/__ivy_ngcc__/fesm2015/ng-otp-input.js","./src/app/login/login.module.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/forgot.component.html","./src/app/login/otp.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyH;AAC/B;AAC3C;;AAE/C;AACA;AACA,cAAc,wGAAwG;AACtH;AACwC;AACE;AACD;;AAEzC,8DAA8D;AAC9D,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,kGAAkG,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,IAAI,iCAAiC,EAAE,+FAA+F,CAAC,2DAAoB,MAAM,wBAAwB,gBAAgB,2DAAoB,IAAI,qCAAqC,EAAE;AAC9b,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA;AACA,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,CAAC;AACD,sDAAsD;AACtD,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,YAAY,yDAAkB;AACnD,CAAC;AACD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,8CAA8C,8BAA8B;AAC5E,iBAAiB,0DAAmB,EAAE,2CAA2C;AACjF,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,kDAAI;AAClB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAqBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,uBAAuB;AACvB;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2BAA2B,wDAAS,GAAG;AACvC,2BAA2B,4BAA4B;AACvD,oEAAoE,0DAAW;AAC/E;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,+DAA+D,kBAAkB;AACjF;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kDAAkD,aAAa;AAC/D,mBAAmB,EAAE;AACrB,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,GAAG,GAAG,kBAAkB;AAC1C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AACh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","file":"login-login-module.js","sourcesContent":["import { Pipe, EventEmitter, Component, Input, Output, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgOtpInputComponent_div_0_input_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown\", function NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onKeyDown($event); })(\"keyup\", function NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const i_r3 = ctx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onKeyUp($event, i_r3); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"otp-input \", ctx_r1.config.inputClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate2(\"id\", \"otp_\", i_r3, \"_\", ctx_r1.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"pattern\", ctx_r1.config.allowNumbersOnly ? \"\\\\d*\" : \"\")(\"type\", ctx_r1.inputType)(\"placeholder\", (ctx_r1.config == null ? null : ctx_r1.config.placeholder) || \"\")(\"disabledNumberOnly\", !ctx_r1.config.allowNumbersOnly)(\"ngStyle\", ctx_r1.config.inputStyles)(\"formControl\", ctx_r1.otpForm.controls[item_r2]);\n} }\nfunction NgOtpInputComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgOtpInputComponent_div_0_input_1_Template, 1, 11, \"input\", 2);\n    ɵngcc0.ɵɵpipe(2, \"keys\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"wrapper \", ctx_r0.config.containerClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"c_\", ctx_r0.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.config.containerStyles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 6, ctx_r0.otpForm == null ? null : ctx_r0.otpForm.controls));\n} }\nclass KeysPipe {\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\nKeysPipe.ɵfac = function KeysPipe_Factory(t) { return new (t || KeysPipe)(); };\nKeysPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"keys\", type: KeysPipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(KeysPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'keys'\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass Config {\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    Config.prototype.inputStyles;\r\n    /** @type {?} */\r\n    Config.prototype.containerStyles;\r\n    /** @type {?} */\r\n    Config.prototype.allowKeyCodes;\r\n    /** @type {?} */\r\n    Config.prototype.length;\r\n    /** @type {?} */\r\n    Config.prototype.allowNumbersOnly;\r\n    /** @type {?} */\r\n    Config.prototype.inputClass;\r\n    /** @type {?} */\r\n    Config.prototype.containerClass;\r\n    /** @type {?} */\r\n    Config.prototype.isPasswordInput;\r\n    /** @type {?} */\r\n    Config.prototype.disableAutoFocus;\r\n    /** @type {?} */\r\n    Config.prototype.placeholder;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputComponent {\r\n    /**\r\n     * @param {?} keysPipe\r\n     */\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.inputType = this.getInputType();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                containerItem.addEventListener('paste', (/**\r\n                 * @param {?} evt\r\n                 * @return {?}\r\n                 */\r\n                (evt) => this.handlePaste(evt)));\r\n                /** @type {?} */\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} idx\r\n     * @return {?}\r\n     */\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifLeftArrow(event) {\r\n        return this.ifKeyCode(event, 37);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifRightArrow(event) {\r\n        return this.ifKeyCode(event, 39);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifBackspaceOrDelete(event) {\r\n        return (event.key === 'Backspace' ||\r\n            event.key === 'Delete' ||\r\n            this.ifKeyCode(event, 8) ||\r\n            this.ifKeyCode(event, 46));\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} targetCode\r\n     * @return {?}\r\n     */\r\n    ifKeyCode(event, targetCode) {\r\n        /** @type {?} */\r\n        const key = event.keyCode || event.charCode;\r\n        // tslint:disable-next-line: triple-equals\r\n        return key == targetCode ? true : false;\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onKeyDown($event) {\r\n        /** @type {?} */\r\n        var isSpace = this.ifKeyCode($event, 32);\r\n        if (isSpace) { // prevent space\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @param {?} inputIdx\r\n     * @return {?}\r\n     */\r\n    onKeyUp($event, inputIdx) {\r\n        /** @type {?} */\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        /** @type {?} */\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (this.ifRightArrow($event)) {\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (this.ifLeftArrow($event)) {\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const isBackspace = this.ifBackspaceOrDelete($event);\r\n        if (isBackspace && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidEntry($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                ele.setSelectionRange(0, 1);\r\n            }), 0);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifValidEntry(event) {\r\n        /** @type {?} */\r\n        const inp = String.fromCharCode(event.keyCode);\r\n        /** @type {?} */\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n            (event.keyCode >= 96 && event.keyCode <= 105));\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    focusTo(eleId) {\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((/**\r\n         * @param {?} c\r\n         * @param {?} idx\r\n         * @return {?}\r\n         */\r\n        (c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        }));\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            /** @type {?} */\r\n            var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n            /** @type {?} */\r\n            let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n            if (ele && ele.focus) {\r\n                ele.focus();\r\n            }\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    rebuildValue() {\r\n        /** @type {?} */\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach((/**\r\n         * @param {?} k\r\n         * @return {?}\r\n         */\r\n        k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                val += this.otpForm.controls[k].value;\r\n            }\r\n        }));\r\n        this.onInputChange.emit(val);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getInputType() {\r\n        return this.config.isPasswordInput\r\n            ? 'password'\r\n            : this.config.allowNumbersOnly\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        /** @type {?} */\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            /** @type {?} */\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\nNgOtpInputComponent.ɵfac = function NgOtpInputComponent_Factory(t) { return new (t || NgOtpInputComponent)(ɵngcc0.ɵɵdirectiveInject(KeysPipe)); };\nNgOtpInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgOtpInputComponent, selectors: [[\"ng-otp-input\"]], inputs: { config: \"config\" }, outputs: { onInputChange: \"onInputChange\" }, decls: 1, vars: 1, consts: [[3, \"class\", \"id\", \"ngStyle\", 4, \"ngIf\"], [3, \"id\", \"ngStyle\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"class\", \"formControl\", \"id\", \"keydown\", \"keyup\", 4, \"ngFor\", \"ngForOf\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"formControl\", \"id\", \"keydown\", \"keyup\"]], template: function NgOtpInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgOtpInputComponent_div_0_Template, 3, 8, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.otpForm == null ? null : ctx.otpForm.controls);\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ɵngcc2.DefaultValueAccessor, NumberOnlyDirective, ɵngcc2.MaxLengthValidator, ɵngcc2.PatternValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective]; }, pipes: function () { return [KeysPipe]; }, styles: [\".otp-input[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper[_ngcontent-%COMP%]   .otp-input[_ngcontent-%COMP%]:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input[_ngcontent-%COMP%]{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input[_ngcontent-%COMP%]{width:30px;font-size:18px;height:30px}}\"] });\r\n/** @nocollapse */\r\nNgOtpInputComponent.ctorParameters = () => [\r\n    { type: KeysPipe }\r\n];\r\nNgOtpInputComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    onInputChange: [{ type: Output }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'ng-otp-input',\n                template: \"<div class=\\\"wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\" numberOnly [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [disabledNumberOnly]=\\\"!config.allowNumbersOnly\\\" [ngStyle]=\\\"config.inputStyles\\\" maxlength=\\\"1\\\"\\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"off\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" id=\\\"otp_{{i}}_{{componentKey}}\\\" (keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\">\\r\\n</div>\",\n                styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input{width:30px;font-size:18px;height:30px}}\"]\n            }]\n    }], function () { return [{ type: KeysPipe }]; }, { config: [{\n            type: Input\n        }], onInputChange: [{\n            type: Output\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.config;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.onInputChange;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.otpForm;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputControls;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.componentKey;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputType;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgOtpInputComponent.prototype.keysPipe;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NumberOnlyDirective {\r\n    /**\r\n     * @param {?} _elRef\r\n     * @param {?} _renderer\r\n     */\r\n    constructor(_elRef, _renderer) {\r\n        this._elRef = _elRef;\r\n        this._renderer = _renderer;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (!this.disabledNumberOnly) {\r\n            this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n        }\r\n    }\r\n}\nNumberOnlyDirective.ɵfac = function NumberOnlyDirective_Factory(t) { return new (t || NumberOnlyDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNumberOnlyDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberOnlyDirective, selectors: [[\"\", \"numberOnly\", \"\"]], inputs: { disabledNumberOnly: \"disabledNumberOnly\" } });\r\n/** @nocollapse */\r\nNumberOnlyDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nNumberOnlyDirective.propDecorators = {\r\n    disabledNumberOnly: [{ type: Input }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberOnlyDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[numberOnly]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { disabledNumberOnly: [{\n            type: Input\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NumberOnlyDirective.prototype.disabledNumberOnly;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._elRef;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._renderer;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputModule {\r\n}\nNgOtpInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgOtpInputModule });\nNgOtpInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgOtpInputModule_Factory(t) { return new (t || NgOtpInputModule)(); }, providers: [KeysPipe], imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgOtpInputModule, { declarations: function () { return [NgOtpInputComponent, KeysPipe, NumberOnlyDirective]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        ReactiveFormsModule]; }, exports: function () { return [NgOtpInputComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule\n                ],\n                declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\n                exports: [NgOtpInputComponent],\n                providers: [KeysPipe]\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgOtpInputModule, NgOtpInputComponent as ɵa, KeysPipe as ɵb, NumberOnlyDirective as ɵc };\n\n//# sourceMappingURL=ng-otp-input.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginRoutingModule } from './login-routing.module'\nimport { ForgotDialog, LoginComponent, OtpDialog } from './login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport { NgOtpInputModule } from 'ng-otp-input';\n\n\n@NgModule({\n  declarations: [LoginComponent, ForgotDialog, OtpDialog],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    NgOtpInputModule\n  ]\n})\nexport class LoginModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }","import { trigger, transition, style, animate } from '@angular/animations';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  current = '';\n  in = 0;\n  img_list = [\n    '../assets/login/login-1.png',\n    '../assets/login/login-2.png',\n    '../assets/login/login-3.png',\n    '../assets/login/login-4.png'\n  ];\n  loginForm: FormGroup;\n  remember_me = false;\n  showText: any = false;\n  visible: any = 'visibility';\n  blueColor: any = 'primary';\n\n  constructor(public fb: FormBuilder, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n    setInterval(() => {\n      this.in = ++this.in % this.img_list.length;\n      this.current = this.img_list[this.in];\n    }, 2000);\n  }\n\n  rememberMe() {\n\n  }\n\n  tooglePwd(show) {\n    this.showText = show;\n    const a = document.getElementById('login-pwd');\n\n    if (show) {\n      this.visible = 'visibility_off'\n      a.setAttribute('type', 'text');\n    } else {\n      this.visible = 'visibility';\n      a.setAttribute('type', 'password');\n    }\n  }\n\n  openForgotDialog() {\n    const dialogRef = this.dialog.open(ForgotDialog, {\n      width: '492px',\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n  getOtp() {\n    const dialogRef = this.dialog.open(OtpDialog, {\n      width: '492px',\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n}\n\n@Component({\n  selector: 'forgot-dialog',\n  templateUrl: 'forgot.component.html',\n  styleUrls: ['./login.component.css'],\n  animations: [\n    trigger(\"myAnimation\", [\n      transition(\":enter\", [\n        style({ opacity: 0 }),\n        animate(\n          \"800ms\",\n          style({\n            opacity: 1\n          })\n        ),\n      ])\n    ]),\n  ]\n})\nexport class ForgotDialog {\n  currentNav = 'email';\n  email = 'surya@airliftusa.com'.replace('(?=.*@)/', '*');\n}\n\n@Component({\n  selector: 'otp-dialog',\n  templateUrl: 'otp.component.html',\n  styleUrls: ['./login.component.css'],\n  animations: [\n    trigger(\"myAnimation\", [\n      transition(\":enter\", [\n        style({ opacity: 0 }),\n        animate(\n          \"1000ms\",\n          style({\n            opacity: 1\n          })\n        ),\n      ])\n    ]),\n  ]\n})\nexport class OtpDialog {\n  currentNav = 'email';\n  email = 'surya@airliftusa.com'.replace('(?=.*@)/', '*');\n\n  onOtpChange(event) {\n    console.log(event, 'event');\n\n  }\n}\n","<div class=\"d-flex full-height\">\n    <div class=\"width-60\">\n        <div class=\"full-height img-outer\">\n            <img class=\"img full-height\" *ngIf=\"current\" [src]=\"current\">\n        </div>\n    </div>\n    <div class=\"width-40 margin-container\">\n        <div class=\"airlift-logo\"> <img src=\"../../assets/img/logo.png\"> </div>\n        <div class=\"welcome-text fw-500 f-size\"> Hey there! Welcome <span class=\"back-text\"> Back.</span> </div>\n        <form class=\"d-flex-wrap login-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"getOtp()\">\n            <div class=\"fw-500 field-space\"> <span class=\"material-icons mail-icon\"> mail_outline </span> USER ID </div>\n            <div class=\"field-margin\">\n                <input class=\"field-90\" type=\"text\" formControlName=\"email\" placeholder=\"Enter your User Id\" />\n                <div class=\"error-class \"\n                    *ngIf=\"loginForm.controls.email.status=='INVALID' && loginForm.controls.email.touched\"> Enter valid\n                    User Id </div>\n            </div>\n            <div class=\"fw-500 field-space\"> <span class=\"material-icons mail-icon\"> lock </span> PASSWORD </div>\n            <div class=\"field-margin\">\n                <input class=\"field-90\" id=\"login-pwd\" type=\"password\" formControlName=\"password\"\n                    placeholder=\"Enter your Password\" />\n                <span #visibility class=\"material-icons visible-icon\" (click)=\"tooglePwd(!showText)\"> {{visible}}\n                </span>\n                <div class=\"error-class\"\n                    *ngIf=\"loginForm.controls.password.status=='INVALID' && loginForm.controls.password.touched\">\n                    Enter valid Password\n                </div>\n            </div>\n            <div class=\"d-flex color-greyish font-14 field-space\">\n                <mat-checkbox class=\"example-margin width-40\" (change)=\"rememberMe()\" [color]=\"blueColor\"\n                    [(ngModel)]=\"remember_me\" [ngModelOptions]=\"{standalone: true}\"> Remember Me </mat-checkbox>\n                <div class=\"width-50 forgot-pwd\"> <span class=\"cursor-pointer\" (click)=\"openForgotDialog()\"> Forgot\n                        Password? </span> </div>\n            </div>\n            <button mat-raised-button color=\"primary\" [disabled]=\"!loginForm.valid\"\n                class=\"field-margin field-90 login-btn field-space\">Login</button>\n        </form>\n        <div class=\"copy-right width-60 font-10\"> Copyright © 2020 Airlift USA INC. All rights reserved. </div>\n    </div>\n</div>","<div>\n    <div class=\"d-flex justify-end\"> <span class=\"material-icons cursor-pointer\" [mat-dialog-close]=\"true\"> close </span> </div>\n    <div *ngIf=\"currentNav === 'email'\" [@myAnimation]>\n        <div class=\"forgot-title fw-500\"> Forgot Password? </div>\n        <div class=\"d-flex justify-center\">\n            <img src=\"../../assets/login-svg/Airlift-Doubt.svg\">\n        </div>\n        <div class=\"email-text\">\n            Enter the email address \n            associated with your account. \n        </div>\n        <div class=\"link-text\">\n            We will send your manager/admin a link to reset your password\n        </div>\n        <mat-form-field class=\"forgot-email d-flex width-50\">\n            <mat-label>Enter Email Address </mat-label>\n            <input matInput type=\"text\">\n            <mat-icon matSuffix>arrow_forward</mat-icon>\n        </mat-form-field>\n    </div>\n\n    <div *ngIf=\"currentNav === 'emailSent'\" [@myAnimation]>\n        <div class=\"forgot-title fw-500\"> Email Sent </div>\n        <div class=\"d-flex justify-center\">\n            <img src=\"../../assets/login-svg/Airlift-Happy.svg\">\n        </div>\n        <div class=\"email-text\">\n            Enter the verification code we just sent you on your email address.\n        </div>\n        <div class=\"d-flex justify-center\">\n            {{email}}\n        </div>\n    </div>\n\n    <div class=\"d-flex forgot-footer justify-center\">\n        <div class=\"forgot-circle cursor-pointer\" [ngClass]=\"{'active-circle': currentNav === 'email'}\" (click)=\"currentNav = 'email'\"></div>\n        <div class=\"forgot-circle cursor-pointer\" [ngClass]=\"{'active-circle': currentNav === 'emailSent'}\" (click)=\"currentNav = 'emailSent'\"></div>\n    </div>\n\n</div>","<div class=\"d-flex justify-end\"> <span class=\"material-icons cursor-pointer\" [mat-dialog-close]=\"true\"> close </span> </div>\n<div [@myAnimation]>\n    <div class=\"forgot-title fw-500\"> OTP Verification </div>\n    <div class=\"d-flex justify-center\">\n        <img src=\"../../assets/login-svg/Airlift-Happy.svg\">\n    </div>\n    <div class=\"email-text\">\n        Enter the verification code we just sent you on your email address.\n    </div>\n    <div class=\"d-flex justify-center\">\n        {{email}}\n    </div>\n    <div class=\"d-flex justify-center\" style=\"margin: 15px 0;\">\n        <ng-otp-input (onInputChange)=\"onOtpChange($event)\"  [config]=\"{length:4}\"></ng-otp-input>\n        <div class=\"center-otp-icon\"> <img src=\"../../assets/login-svg/OTP-Correct.svg\"> </div>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}